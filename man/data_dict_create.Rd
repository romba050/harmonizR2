% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/03-mlstr_dictionary_functions.R
\name{data_dict_create}
\alias{data_dict_create}
\title{Create a data dictionary in the Maelstrom Research format from a dataset}
\usage{
data_dict_create(
  tbl_name,
  project = NA_character_,
  categories = c(),
  lang = "en"
)
}
\arguments{
\item{tbl_name}{A character string or tibble R object identifying the input dataset.}

\item{project}{A character string identifying the associated project (if any).}

\item{categories}{A character vector in a specific structure identifying the
columns that contain categorical variables (if any) and the associated category names.
c("variableA{name1 = label1 ; name2 = label2}, variableB") means that the variableA
has two labels and names associated, and variableB has all of its values as categories.}

\item{lang}{A character string identifying the lang of the data dictionary (default 'en')}
}
\value{
A list of two tibbles: Variables and Categories. Variables has all the
variable names extracted from the dataset column names as rows and the Maelstrom
Research descriptors standards of variables as columns. Categories has all the category
names extracted from the “categories” argument as rows and the Maelstrom Research
descriptors standard of categories as columns.
}
\description{
Creates a data dictionary in the Maelstrom Research formats (with "Variables" and "Categories"
in separate tibbles and standard columns in each) from any dataset in tibble format.
If the input dataset has no associated metadata, a data dictionary with a minimal
of information is created from the column (variable) names to create the data
dictionary structure required for harmonizRLegacy (all columns except variable names
will be blank).
}
\details{
Must provide an input data dictionary in tibble format, with or without metadata
in addition to column names.
}
\examples{
\dontrun{
# use case 1: create a data dictionary from any dataset
data_dict_create(iris)

# use case 2: create a data dictionary with project and categorical variables
data_dict_create(
  tbl_name = iris,
  project = "iris",
  categories = c("Sepal.Length{-888 = none ; -7 = PNA} , Species"))
}

}
